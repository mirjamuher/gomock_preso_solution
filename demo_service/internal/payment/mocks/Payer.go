// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	payment "github.com/mirjamuher/gomock_preso_solution/demo_service/internal/payment"
	mock "github.com/stretchr/testify/mock"
)

// Payer is an autogenerated mock type for the Payer type
type Payer struct {
	mock.Mock
}

// ProcessPayment provides a mock function with given fields: p
func (_m *Payer) ProcessPayment(p *payment.Payment) (payment.State, error) {
	ret := _m.Called(p)

	var r0 payment.State
	var r1 error
	if rf, ok := ret.Get(0).(func(*payment.Payment) (payment.State, error)); ok {
		return rf(p)
	}
	if rf, ok := ret.Get(0).(func(*payment.Payment) payment.State); ok {
		r0 = rf(p)
	} else {
		r0 = ret.Get(0).(payment.State)
	}

	if rf, ok := ret.Get(1).(func(*payment.Payment) error); ok {
		r1 = rf(p)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPayer interface {
	mock.TestingT
	Cleanup(func())
}

// NewPayer creates a new instance of Payer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPayer(t mockConstructorTestingTNewPayer) *Payer {
	mock := &Payer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
